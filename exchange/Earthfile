VERSION --try 0.8
IMPORT github.com/earthly/lib/rust:3.0.2 AS rust

FROM rust:1.78-bookworm

setup:
    RUN apt-get -y update && apt-get -y install clang mold
    ENV RUSTFLAGS="-C linker=clang -C link-arg=-fuse-ld=/usr/bin/mold"
    RUN rustup component add clippy rustfmt
    DO rust+INIT --keep-fingerprints=true
    DO rust+CARGO --args="install sqlx-cli"

copy-src:
    FROM +setup
    WORKDIR /tmp/exchange
    COPY --keep-ts --dir Cargo.toml Cargo.lock src migrations build.rs .sqlx ./

    # Ugly hack
    # tigerbeetle needs to be in a git repository to be built for some reason
    RUN git config --global user.email "you@example.com" && git config --global user.name "Your Name"
    RUN git init && git commit --allow-empty -m "initial commit"
    ENV GIT_DISCOVERY_ACROSS_FILESYSTEM=1

sqlx-check:
    FROM +copy-src
    DO rust+CARGO --args="sqlx prepare --check"

sqlx-setup:
    FROM +copy-src
    COPY .env ./
    DO rust+CARGO --args="sqlx database setup"
    DO rust+CARGO --args="sqlx prepare"
    SAVE ARTIFACT .sqlx AS LOCAL .sqlx
    SAVE ARTIFACT data.db AS LOCAL data.db

build-debug:
    FROM +sqlx-check
    DO rust+CARGO --args="build" --output="debug/[^/]+"
    SAVE ARTIFACT target/debug /debug

build-release:
    FROM +sqlx-check
    DO rust+CARGO --args="build --release" --output="release/[^/]+"
    SAVE ARTIFACT target/release /release

test:
    FROM +sqlx-check
    DO rust+CARGO --args="test"

fmt:
    FROM +sqlx-check
    DO rust+CARGO --args "fmt --check"

lint:
    FROM +sqlx-check
    DO rust+CARGO --args="clippy --all-targets --all-features -- -D warnings"

docker:
    FROM debian:bookworm
    WORKDIR /opt/exchange

    ARG TARGET=debug
    COPY +build-$TARGET/$TARGET/exchange ./bin/

    ENTRYPOINT ["/opt/exchange/bin/exchange"]
    CMD ["serve"]

    ARG EARTHLY_GIT_HASH
    SAVE IMAGE --push suremarc/mkt-sim-exchange suremarc/mkt-sim-exchange:$EARTHLY_GIT_HASH

services:
  postgres:
    image: 'postgres:latest'
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 1s
      timeout: 5s
      retries: 10

  tigerbeetle:
    image: ghcr.io/tigerbeetle/tigerbeetle:0.13.133
    restart: always
    network_mode: service:exchange
    volumes: [ tigerbeetle:/data ]
    command: start --addresses=127.0.0.1:3000 /data/0_0.tigerbeetle
    depends_on:
      tigerbeetle-format:
        condition: service_completed_successfully
      exchange:
        condition: service_started

  tigerbeetle-format:
    image: ghcr.io/tigerbeetle/tigerbeetle:0.13.133
    volumes: [ tigerbeetle:/data ]
    entrypoint: /bin/sh
    command:
      - -c
      - |-
        if [ ! -f /data/0_0.tigerbeetle ]; then
          ./tigerbeetle format --cluster=0 --replica=0 --replica-count=1 /data/0_0.tigerbeetle
        fi

  redis:
    image: redis/redis-stack-server:7.2.0-v10
    restart: always
    ports:
      - '6379:6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes: [ redis:/data ]

  exchange:
    image: suremarc/mkt-sim-exchange
    restart: always
    ports: [ 127.0.0.1:8000:8000 ]
    environment:
      - ROCKET_ADDRESS=0.0.0.0
    volumes:
      - type: bind
        source: ./Rocket.toml
        target: /opt/exchange/Rocket.toml
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres:
    driver: local
  tigerbeetle:
    driver: local
  redis:
    driver: local
